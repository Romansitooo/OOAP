using System;
using System.Collections.Generic;

// Інтерфейс, що визначає методи для обчислення заробітної платні
public interface ISalaryCalculator
{
    double CalculateSalary(string position);
}

// Клас, який реалізує обчислення заробітної платні
public class SalaryCalculator : ISalaryCalculator
{
    public double CalculateSalary(string position)
    {
        switch (position)
        {
            case "Головний інженер":
                return 10000.0;
            case "Провідний інженер":
                return 8000.0;
            case "Інженер-програміст":
                return 6000.0;
            case "Системний адміністратор":
                return 7000.0;
            default:
                throw new ArgumentException("Invalid position");
        }
    }
}

// Клас для представлення працівника
public class Employee
{
    public string Name { get; set; }
    public string Position { get; set; }

    public Employee(string name, string position)
    {
        Name = name;
        Position = position;
    }

    public void DisplayInformation()
    {
        Console.WriteLine($"Ім'я: {Name}, позиція: {Position}");
    }
}

class Program
{
    static void Main()
    {
        // Створення екземпляра обчислювача заробітної платні
        ISalaryCalculator salaryCalculator = new SalaryCalculator();

        // Список працівників
        var employees = new List<Employee>
        {
            new Employee("Рома", "Головний інженер"),
            new Employee("Антон", "Провідний інженер"),
            new Employee("Аня", "Інженер-програміст"),
            new Employee("Назар", "Системний адміністратор")
        };

        // Виведення інформації про працівників та їх заробітну платню
        foreach (var employee in employees)
        {
            employee.DisplayInformation();
            double salary = salaryCalculator.CalculateSalary(employee.Position);
            Console.WriteLine($"Заробітня плата: {salary:C}");
            Console.WriteLine();
        }
    }
}
